// Main app comp ---------------------------------------------------
class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      name: null,
      email: null,
      password: null,
      addressLine1: null,
      addressLine2: null,
      city: null,
      zipCode: null,
      phoneNumber: null,
      creditCardNumber: null,
      expirationDate: null,
      cvv: null,
      billingZipCode: null,
      checkoutPage: true,
      form1Page: false,
      form2Page: false,
      form3Page: false,
      confirmationPage: false,
      purchasedPage: false
    };
    this.checkout = this.checkout.bind(this);
    this.form1Page = this.form1Page.bind(this);
    this.form2Page = this.form2Page.bind(this);
    this.form3Page = this.form3Page.bind(this);
    this.purchasedPage = this.purchasedPage.bind(this);
    this.homePage = this.homePage.bind(this);
  }

  checkout() {
    this.setState({
      checkoutPage: false,
      form1Page: true
    });
  }

  form1Page(data) {
    for (let key in data) {
      this.setState({
        [key]: data[key]
      });
    }

    this.setState({
      form1Page: false,
      form2Page: true
    });
  }

  form2Page(data) {
    for (let key in data) {
      this.setState({
        [key]: data[key]
      });
    }

    this.setState({
      form2Page: false,
      form3Page: true
    });
  }

  form3Page(data) {
    for (let key in data) {
      this.setState({
        [key]: data[key]
      });
    }

    this.setState({
      form3Page: false,
      confirmationPage: true
    });
  }

  purchasedPage() {
    // let data = this.state;
    // console.log('data = this.state:___________________');
    // console.log(data);
    let data = {
      name: this.state.name,
      email: this.state.email,
      password: this.state.password,
      addressLine1: this.state.addressLine1,
      addressLine2: this.state.addressLine2,
      city: this.state.city,
      state: this.state.state,
      zipCode: this.state.zipCode,
      phoneNumber: this.state.phoneNumber,
      creditCardNumber: this.state.creditCardNumber,
      expirationDate: this.state.expirationDate,
      cvv: this.state.cvv,
      billingZipCode: this.state.billingZipCode
    };
    axios.post('http://localhost:3000/purchasePage', data).then(data => {
      console.log('Successful axios post', data);
      this.setState({
        confirmationPage: false,
        purchasedPage: true
      });
    }).catch(err => {
      console.log('Unsuccessful axios post', err);
    });
  }

  homePage() {
    this.setState({
      purchasedPage: false,
      checkoutPage: true
    });
  }

  render() {
    return /*#__PURE__*/React.createElement("div", {
      id: "App"
    }, this.state.checkoutPage ? /*#__PURE__*/React.createElement(CheckoutPage, {
      nextPage: this.checkout
    }) : null, this.state.form1Page ? /*#__PURE__*/React.createElement(Form1Page, {
      nextPage: this.form1Page
    }) : null, this.state.form2Page ? /*#__PURE__*/React.createElement(Form2Page, {
      nextPage: this.form2Page
    }) : null, this.state.form3Page ? /*#__PURE__*/React.createElement(Form3Page, {
      nextPage: this.form3Page
    }) : null, this.state.confirmationPage ? /*#__PURE__*/React.createElement(PurchasePage, {
      nextPage: this.purchasedPage,
      data: this.state
    }) : null, this.state.purchasedPage ? /*#__PURE__*/React.createElement(HomePage, {
      nextPage: this.homePage
    }) : null);
  }

} // CheckoutPage Comp  ----------------------------------------------


class CheckoutPage extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return /*#__PURE__*/React.createElement("button", {
      onClick: this.props.nextPage
    }, "Checkout Now");
  }

} // Form1Page Comp --------------------------------------------------


class Form1Page extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      name: '',
      email: '',
      password: ''
    };
    this.onChange = this.onChange.bind(this);
    this.onSubmit = this.onSubmit.bind(this);
  }

  onChange(e) {
    this.setState({
      [e.target.id]: e.target.value
    });
  }

  onSubmit(e) {
    this.props.nextPage(this.state);
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h2", null, "Form1Page - Name, Email, Password"), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("form", {
      onSubmit: this.onSubmit
    }, /*#__PURE__*/React.createElement("label", null, "First and Last Name:", /*#__PURE__*/React.createElement("input", {
      id: "name",
      type: "text",
      onChange: this.onChange,
      value: this.state.name
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Email-----------------:", /*#__PURE__*/React.createElement("input", {
      id: "email",
      type: "text",
      onChange: this.onChange,
      value: this.state.email
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Password-------------:", /*#__PURE__*/React.createElement("input", {
      id: "password",
      type: "text",
      onChange: this.onChange,
      value: this.state.password
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("button", {
      type: "button",
      onClick: this.onSubmit
    }, "Proceed to Shipping Details")));
  }

} // Form2Page Comp --------------------------------------------------


class Form2Page extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      addressLine1: '',
      addressLine2: '',
      city: '',
      state: '',
      zipCode: '',
      phoneNumber: ''
    };
    this.onChange = this.onChange.bind(this);
    this.onSubmit = this.onSubmit.bind(this);
  }

  onChange(e) {
    this.setState({
      [e.target.id]: e.target.value
    });
  }

  onSubmit(e) {
    this.props.nextPage(this.state);
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h2", null, "Form2Page - Address, Phone"), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("form", {
      onSubmit: this.onSubmit
    }, /*#__PURE__*/React.createElement("label", null, "Street Address - Line 1:", /*#__PURE__*/React.createElement("input", {
      id: "addressLine1",
      type: "text",
      onChange: this.onChange,
      value: this.state.addressLine1
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Street Address - Line 2:", /*#__PURE__*/React.createElement("input", {
      id: "addressLine2",
      type: "text",
      onChange: this.onChange,
      value: this.state.addressLine2
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "City:", /*#__PURE__*/React.createElement("input", {
      id: "city",
      type: "text",
      onChange: this.onChange,
      value: this.state.city
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "State:", /*#__PURE__*/React.createElement("input", {
      id: "state",
      type: "text",
      onChange: this.onChange,
      value: this.state.state
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Zip Code:", /*#__PURE__*/React.createElement("input", {
      id: "zipCode",
      type: "text",
      onChange: this.onChange,
      value: this.state.zipCode
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Phone Number:", /*#__PURE__*/React.createElement("input", {
      id: "phoneNumber",
      type: "text",
      onChange: this.onChange,
      value: this.state.phoneNumber
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("button", {
      type: "button",
      onClick: this.onSubmit
    }, "Proceed to Credit Card Details")));
  }

} // Form3Page comp --------------------------------------------------


class Form3Page extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      creditCardNumber: '',
      expirationDate: '',
      cvv: '',
      billingZipCode: ''
    };
    this.onChange = this.onChange.bind(this);
    this.onSubmit = this.onSubmit.bind(this);
  }

  onChange(e) {
    this.setState({
      [e.target.id]: e.target.value
    });
  }

  onSubmit(e) {
    this.props.nextPage(this.state);
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h2", null, "Form3Page - Credit Card #, Expiration Date, CVV, Billing Zip Code"), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("form", {
      onSubmit: this.onSubmit
    }, /*#__PURE__*/React.createElement("label", null, "Credit Card #:", /*#__PURE__*/React.createElement("input", {
      id: "creditCardNumber",
      type: "text",
      onChange: this.onChange,
      value: this.state.creditCardNumber
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Expiration Date:", /*#__PURE__*/React.createElement("input", {
      id: "expirationDate",
      type: "text",
      onChange: this.onChange,
      value: this.state.expirationDate
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "CVV:", /*#__PURE__*/React.createElement("input", {
      id: "cvv",
      type: "text",
      onChange: this.onChange,
      value: this.state.cvv
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Billing Zip Code:", /*#__PURE__*/React.createElement("input", {
      id: "billingZipCode",
      type: "text",
      onChange: this.onChange,
      value: this.state.billingZipCode
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("button", {
      type: "button",
      onClick: this.onSubmit
    }, "Confirm Purchase Details")));
  }

} // purchasedPage comp -----------------------------------------------


class PurchasePage extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h2", null, "Confirm Purchase Details"), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("li", null, "Name:             ", this.props.data.name), /*#__PURE__*/React.createElement("li", null, "Email:            ", this.props.data.email), /*#__PURE__*/React.createElement("li", null, "Password:         ", this.props.data.password), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("li", null, "Shipping Address: ", this.props.data.addressLine1), /*#__PURE__*/React.createElement("li", null, "Shipping Address: ", this.props.data.addressLine2), /*#__PURE__*/React.createElement("li", null, "City:             ", this.props.data.city), /*#__PURE__*/React.createElement("li", null, "Zip Code:         ", this.props.data.zipCode), /*#__PURE__*/React.createElement("li", null, "Phone Number:     ", this.props.data.phoneNumber), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("li", null, "Credit Card #:    ", this.props.data.creditCardNumber), /*#__PURE__*/React.createElement("li", null, "Expiration Date:  ", this.props.data.expirationDate), /*#__PURE__*/React.createElement("li", null, "CVV:              ", this.props.data.cvv), /*#__PURE__*/React.createElement("li", null, "Billing Zip Code: ", this.props.data.billingZipCode), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("button", {
      type: "button",
      onClick: this.props.nextPage
    }, "Complete Purchase"));
  }

} // Homepage comp ([purchase complete]) -----------------------------


class HomePage extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h2", null, "Purchase Complete."), /*#__PURE__*/React.createElement("h3", null, "Thank you for shopping with us!"), /*#__PURE__*/React.createElement("button", {
      type: "button",
      onClick: this.props.nextPage
    }, "Continue Shopping"));
  }

}

ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById('root'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,